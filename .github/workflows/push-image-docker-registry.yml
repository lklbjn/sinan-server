name: push-image-docker-registry

on:
  push:
    branches:
      - main
      - develop
    tags:
      - '*'
  release:
    types: [published]
  workflow_dispatch:
  
jobs:
  build:
    runs-on: ubuntu-latest
    environment: RUNTIME
    env:
      REGISTRY: docker.io
      NAMESPACE: sparkly999
      IMAGE_NAME: sinan-server
      REGISTRY_USERNAME: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
      REGISTRY_PASSWORD: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
    steps:
      # 拉取代码
      - uses: actions/checkout@v3

      # 设置JDK并设置缓存
      - name: Set UP JDK 17 for x64
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          architecture: 'x64'
          cache: 'maven'

      # 运行构建
      - name: Run the x64 build
        run: mvn clean package -DskipTests

      # 验证Jar文件是否存在
      - name: Verify JAR file
        run: |
          if [ -f jar/sinan.jar ]; then
            echo "JAR file found."
          else
            echo "JAR file not found."
            exit 1
          fi

      - name: Upload Jar Artifact
        uses: actions/upload-artifact@v4
        with:
          name: sinan
          path: jar/sinan.jar

      - name: Log in to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ env.REGISTRY_PASSWORD }}

      - name: Set SHORT_SHA
        id: vars
        run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{env.NAMESPACE}}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=raw,value=${{ github.ref_name }}-${{ env.SHORT_SHA }}
            type=raw,value=${{ github.ref_name }}
          labels: |
            maintainer=peixy_j@163.com
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.ref.name=${{ github.ref_name }}
            org.opencontainers.image.created=${{ github.event.head_commit.timestamp }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}